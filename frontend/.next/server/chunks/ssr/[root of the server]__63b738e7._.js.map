{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 103, "column": 0}, "map": {"version":3,"sources":["file:///home/digambar/Projects/dice-play/frontend/app/api.ts"],"sourcesContent":["import axios from \"axios\";\n\nconst API_URL = \"http://localhost:8080/api\";\n\ninterface RollDiceResponse {\n  roll: number;\n  newBalance: number;\n}\n\nexport const rollDiceApi = async (bet: number): Promise<RollDiceResponse> => {\n  try {\n    const response = await axios.post<RollDiceResponse>(`${API_URL}/roll-dice`, { bet });\n    return response.data;\n  } catch (error) {\n    throw new Error(\"Error rolling dice.\");\n  }\n};\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,UAAU;AAOT,MAAM,cAAc,OAAO;IAChC,IAAI;QACF,MAAM,WAAW,MAAM,qIAAA,CAAA,UAAK,CAAC,IAAI,CAAmB,GAAG,QAAQ,UAAU,CAAC,EAAE;YAAE;QAAI;QAClF,OAAO,SAAS,IAAI;IACtB,EAAE,OAAO,OAAO;QACd,MAAM,IAAI,MAAM;IAClB;AACF","debugId":null}},
    {"offset": {"line": 119, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 125, "column": 0}, "map": {"version":3,"sources":["file:///home/digambar/Projects/dice-play/frontend/app/page.tsx"],"sourcesContent":["\"use client\";\nimport { useState } from \"react\";\nimport { rollDiceApi } from \"./api\"; // Import API function\nimport Dice from \"./components/Dice\";\n\nexport default function DiceGame() {\n  const [bet, setBet] = useState<number>(0);\n  const [balance, setBalance] = useState<number>(1000);\n  const [roll, setRoll] = useState<number | null>(null);\n  const [result, setResult] = useState<string>(\"\");\n\n  const rollDice = async () => {\n    if (bet <= 0 || bet > balance) {\n      setResult(\"Invalid bet amount.\");\n      return;\n    }\n\n    try {\n      const { roll, newBalance } = await rollDiceApi(bet);\n      setRoll(roll);\n      setBalance(newBalance);\n      setResult(`You rolled a ${roll}. ${roll >= 4 ? \"You won!\" : \"You lost!\"}`);\n    } catch (error) {\n      setResult((error as Error).message);\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col items-center justify-center min-h-screen bg-gray-900 text-white\">\n      <h1 className=\"text-3xl font-bold mb-4\">Provably Fair Dice Game</h1>\n      <p className=\"mb-2\">Balance: ${balance}</p>\n\n      {/* <Dice roll={roll} /> */}\n\n      <input\n        type=\"number\"\n        value={bet}\n        onChange={(e) => setBet(Number(e.target.value))}\n        className=\"p-2 text-black rounded mt-4\"\n        placeholder=\"Enter Bet Amount\"\n      />\n      <button onClick={rollDice} className=\"px-4 py-2 bg-blue-500 rounded mt-4\">\n        Roll Dice\n      </button>\n      {result && <p className=\"mt-4\">{result}</p>}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;AACA,yLAAqC,sBAAsB;AAF3D;;;;AAKe,SAAS;IACtB,MAAM,CAAC,KAAK,OAAO,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IACvC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IAC/C,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAChD,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IAE7C,MAAM,WAAW;QACf,IAAI,OAAO,KAAK,MAAM,SAAS;YAC7B,UAAU;YACV;QACF;QAEA,IAAI;YACF,MAAM,EAAE,IAAI,EAAE,UAAU,EAAE,GAAG,MAAM,CAAA,GAAA,0GAAA,CAAA,cAAW,AAAD,EAAE;YAC/C,QAAQ;YACR,WAAW;YACX,UAAU,CAAC,aAAa,EAAE,KAAK,EAAE,EAAE,QAAQ,IAAI,aAAa,aAAa;QAC3E,EAAE,OAAO,OAAO;YACd,UAAU,AAAC,MAAgB,OAAO;QACpC;IACF;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAA0B;;;;;;0BACxC,8OAAC;gBAAE,WAAU;;oBAAO;oBAAW;;;;;;;0BAI/B,8OAAC;gBACC,MAAK;gBACL,OAAO;gBACP,UAAU,CAAC,IAAM,OAAO,OAAO,EAAE,MAAM,CAAC,KAAK;gBAC7C,WAAU;gBACV,aAAY;;;;;;0BAEd,8OAAC;gBAAO,SAAS;gBAAU,WAAU;0BAAqC;;;;;;YAGzE,wBAAU,8OAAC;gBAAE,WAAU;0BAAQ;;;;;;;;;;;;AAGtC","debugId":null}},
    {"offset": {"line": 211, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}